/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as SignupImport } from './routes/signup';
import { Route as LoginImport } from './routes/login';
import { Route as JoinRoomImport } from './routes/joinRoom';
import { Route as DashboardImport } from './routes/dashboard';
import { Route as CreatedRoomImport } from './routes/createdRoom';
import { Route as IndexImport } from './routes/index';

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const JoinRoomRoute = JoinRoomImport.update({
  id: '/joinRoom',
  path: '/joinRoom',
  getParentRoute: () => rootRoute,
} as any);

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any);

const CreatedRoomRoute = CreatedRoomImport.update({
  id: '/createdRoom',
  path: '/createdRoom',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/createdRoom': {
      id: '/createdRoom';
      path: '/createdRoom';
      fullPath: '/createdRoom';
      preLoaderRoute: typeof CreatedRoomImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard': {
      id: '/dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    '/joinRoom': {
      id: '/joinRoom';
      path: '/joinRoom';
      fullPath: '/joinRoom';
      preLoaderRoute: typeof JoinRoomImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    '/signup': {
      id: '/signup';
      path: '/signup';
      fullPath: '/signup';
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/createdRoom': typeof CreatedRoomRoute;
  '/dashboard': typeof DashboardRoute;
  '/joinRoom': typeof JoinRoomRoute;
  '/login': typeof LoginRoute;
  '/signup': typeof SignupRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/createdRoom': typeof CreatedRoomRoute;
  '/dashboard': typeof DashboardRoute;
  '/joinRoom': typeof JoinRoomRoute;
  '/login': typeof LoginRoute;
  '/signup': typeof SignupRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/createdRoom': typeof CreatedRoomRoute;
  '/dashboard': typeof DashboardRoute;
  '/joinRoom': typeof JoinRoomRoute;
  '/login': typeof LoginRoute;
  '/signup': typeof SignupRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/createdRoom'
    | '/dashboard'
    | '/joinRoom'
    | '/login'
    | '/signup';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/createdRoom' | '/dashboard' | '/joinRoom' | '/login' | '/signup';
  id:
    | '__root__'
    | '/'
    | '/createdRoom'
    | '/dashboard'
    | '/joinRoom'
    | '/login'
    | '/signup';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  CreatedRoomRoute: typeof CreatedRoomRoute;
  DashboardRoute: typeof DashboardRoute;
  JoinRoomRoute: typeof JoinRoomRoute;
  LoginRoute: typeof LoginRoute;
  SignupRoute: typeof SignupRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreatedRoomRoute: CreatedRoomRoute,
  DashboardRoute: DashboardRoute,
  JoinRoomRoute: JoinRoomRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/createdRoom",
        "/dashboard",
        "/joinRoom",
        "/login",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/createdRoom": {
      "filePath": "createdRoom.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/joinRoom": {
      "filePath": "joinRoom.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
